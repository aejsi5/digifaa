# Generated by Django 3.0.1 on 2020-07-02 20:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Recall',
            fields=[
                ('Recall_ID', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Recall_CODE', models.CharField(max_length=500, verbose_name='Rückruf-Code')),
                ('Recall_NAME', models.CharField(max_length=500, verbose_name='Name')),
                ('Recall_DESCRIPTION', models.CharField(max_length=500, verbose_name='Beschreibung')),
                ('Recall_START_DATE', models.DateField(blank=True, verbose_name='Startdatum')),
                ('Recall_PLANNED_COMPLETATION_DATE', models.DateField(blank=True, verbose_name='Geplantes Fertigstellungsdatum')),
                ('Recall_STATUS', models.SmallIntegerField(choices=[(0, 'Erstellt'), (1, 'In Planung'), (2, 'In Bearbeitung'), (3, 'Abgeschlossen'), (4, 'Abgebrochen')], default=0, verbose_name='Status')),
                ('Recall_DATE_COMPLETED', models.DateField(blank=True, verbose_name='Tatsächliches Fertigstellungsdatum')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('Vehicle_ID', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Vehicle_VIN', models.CharField(max_length=30, verbose_name='FIN')),
                ('Vehicle_PLATE', models.CharField(max_length=10, verbose_name='Kennzeichen')),
                ('Vehicel_MAKE', models.CharField(max_length=30, verbose_name='Hersteller')),
                ('Vehicle_MODEL', models.CharField(max_length=30, verbose_name='Modell')),
                ('Vehicle_TYPE', models.CharField(max_length=60, verbose_name='Typ')),
                ('Vehicle_SERIES', models.CharField(max_length=30, verbose_name='Baureihe')),
                ('Vehicle_FIRST_REGISTRATION_DATE', models.DateField(verbose_name='Erstzulassungsdatum')),
            ],
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('Workshop_ID', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Workshop_EXTERNAL_ID', models.CharField(max_length=10, verbose_name='externe ID')),
                ('Workshop_NAME', models.CharField(max_length=50, verbose_name='Name')),
                ('Workshop_ADDRESS', models.CharField(max_length=70, verbose_name='Adresse')),
                ('Workshop_ZIP', models.CharField(max_length=10, verbose_name='PLZ')),
                ('Workshop_CITY', models.CharField(max_length=50, verbose_name='Stadt')),
                ('Workshop_Email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('Workshop_PHONE', models.CharField(blank=True, max_length=30, verbose_name='Telefon')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicel_Recall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('VR_STATUS', models.SmallIntegerField(choices=[(0, 'Offen'), (1, 'Vorbelegt'), (0, 'Abgeschlossen')], default=0, verbose_name='Status')),
                ('VR_DATE_CREATED', models.DateField(auto_now=True, verbose_name='Anlagedatum')),
                ('VR_DATE_COMPLETED', models.DateField(blank=True, verbose_name='Fertigstellungsdatum')),
                ('Recall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dfa_App.Recall')),
                ('Vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dfa_App.Vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Recall_Docs',
            fields=[
                ('Document_ID', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Document_CLASS', models.SmallIntegerField(choices=[(0, 'Anleitung'), (1, 'Technische Information'), (2, 'Anschreiben'), (3, 'Sonstiges')], default=3, verbose_name='Dokumententyp')),
                ('Document_PATH', models.FilePathField(path='C:\\Users\\felix\\Desktop\\Projects\\my_env\\dfa\\dfa_App\\media\\uploads\\documents\\', verbose_name='Upload Pfad')),
                ('Recall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dfa_App.Recall')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('Note_ID', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Note_TEXT', models.CharField(max_length=500, verbose_name='Bemerkung')),
                ('Note_DATE', models.DateTimeField(auto_now=True, verbose_name='Zeitpunkt')),
                ('Note_ODOMETER', models.IntegerField(verbose_name='Kilometerstand')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dfa_App.Vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('History_ID', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('History_EXTERNAL_ID', models.CharField(max_length=500, verbose_name='Externe ID')),
                ('History_DESCRIPTION', models.CharField(max_length=500, verbose_name='Beschreibung')),
                ('History_ODOMETER', models.IntegerField(verbose_name='Kilometerstand')),
                ('History_DATE', models.DateField(verbose_name='Datum')),
                ('Vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dfa_App.Vehicle')),
                ('Workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dfa_App.Workshop')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='Workshop',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dfa_App.Workshop'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
